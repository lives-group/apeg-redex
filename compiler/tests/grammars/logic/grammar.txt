Expression {} {result} <-- WS {} {} OrConditional {} {result};
OrConditional {} {result} <-- AndConditional {} {result} ("||" WS {} {} AndConditional {} {right} {auxiliary <- result /= 0 || right /= 0} ({? auxiliary} {result <- 1} / {? ~auxiliary} {result <- 0}))*;
AndConditional {} {result} <-- ConditionalExpression {} {result} ("&&" WS {} {} ConditionalExpression {} {right} {result <- result * right})*;
ConditionalExpression {} {result} <-- AdditionExpression {} {result} ("==" WS {} {} AdditionExpression {} {right} {auxiliary <- result == right} ({? auxiliary} {result <- 1} / {? ~auxiliary} {result <- 0})
        / "!=" WS {} {} AdditionExpression {} {right} {result <- result - right}
        / '>' WS {} {} AdditionExpression {} {right} {auxiliary <- result > right} ({? auxiliary} {result <- 1} / {? ~auxiliary} {result <- 0})
        / ">=" WS {} {} AdditionExpression {} {right} {auxiliary <- result >= right} ({? auxiliary} {result <- 1} / {? ~auxiliary} {result <- 0})
        / '<' WS {} {} AdditionExpression {} {right} {auxiliary <- result < right} ({? auxiliary} {result <- 1} / {? ~auxiliary} {result <- 0})
        / "<=" WS {} {} AdditionExpression {} {right} {auxiliary <- result <= right} ({? auxiliary} {result <- 1} / {? ~auxiliary} {result <- 0}))?;
AdditionExpression {} {result} <-- Term {} {result} ('+' WS {} {} Term {} {right} {result <- result + right}
        / '-' WS {} {} Term {} {right} {result <- result - right})*;
Term {} {result} <-- Factor {} {result} ('*' WS {} {} Factor {} {right} {result <- result * right}
        / '/' WS {} {} Factor {} {right} {result <- result / right})*;
Factor {} {result} <-- '-' WS {} {} Factor {} {result} {result <- -1 * result}
        / '!' WS {} {} Factor {} {result} ({? result == 0} {result <- 1} / {? result /= 0} {result <- 0})
        / Primary {} {result};
Primary {} {result} <-- Number {0} {result}
        / '(' WS {} {} Expression {} {result} ')' WS {} {}
        / Boolean {} {result};
Number {int :: result} {result} <-- ('0' {result <- 10 * result}
        / '1' {result <- 10 * result + 1}
        / '2' {result <- 10 * result + 2}
        / '3' {result <- 10 * result + 3}
        / '4' {result <- 10 * result + 4}
        / '5' {result <- 10 * result + 5}
        / '6' {result <- 10 * result + 6}
        / '7' {result <- 10 * result + 7}
        / '8' {result <- 10 * result + 8}
        / '9' {result <- 10 * result + 9})+ WS {} {};
Boolean {} {result} <-- ("true" {result <- 1} / "false" {result <- 0}) WS {} {};
WS {} {} <-- [' ', '\n', '\r', '\t']*;
start : Expression {} {result}

/*
sample 1 - (result 1)
sample 2 - (result 0)
sample 3 - (result 0)
*/