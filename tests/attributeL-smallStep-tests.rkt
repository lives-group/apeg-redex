#lang racket
(require redex
         "../attributeL-smallStep.rkt")


(printf "\nBASIC VALUES\n\n")


(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term (#t ()))))
(printf "expected: ((123 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term (123 ()))))
(printf "expected: ((string ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ("string" ()))))
(printf "expected: (((⇒ ((map1 1) (map2 2) (map3 3))) ())),\t\tobtained: ~a\n"		(apply-reduction-relation* expr-red (term ((⇒ (("map1" 1) ("map2" 2) ("map3" 3))) ()))))
(printf "expected: (((: 1 2) ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((: 1 2) ()))))
(printf "expected: ((nil ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term (nil ()))))


(printf "\nBINARY OPERATIONS\n\n")


(printf "expected: ((7 ())),\t\t\t\t\t\tobtained: ~a\n"					(apply-reduction-relation* expr-red (term ((+ 3 4) ()))))
(printf "expected: ((7.14159 ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((+ 3.14159 4) ()))))
(printf "expected: ((4 ())),\t\t\t\t\t\tobtained: ~a\n"					(apply-reduction-relation* expr-red (term ((- 7 3) ()))))
(printf "expected: ((3.85841 ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((- 7 3.14159) ()))))
(printf "expected: ((21 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((* 7 3) ()))))
(printf "expected: ((21.99113 ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((* 7 3.14159) ()))))
(printf "expected: ((2 ())),\t\t\t\t\t\tobtained: ~a\n"					(apply-reduction-relation* expr-red (term ((÷ 14 6) ()))))
(printf "expected: (((÷ 7 3.14159) ())),\t\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((÷ 7 3.14159) ()))))



(printf "\nMANIPULATION OF BOOLEANS\n\n")


(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((&& #t #t) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((&& #t #f) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((&& #f #f) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((&& #f #t) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((|| #t #t) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((|| #t #f) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((|| #f #f) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((|| #f #t) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((¬ #f) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((¬ #t) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((== 0 1) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((== 32 32) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((== 64 64.0) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((> 3 4.5) ()))))
(printf "expected: ((#f ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((> 3 3) ()))))
(printf "expected: ((#t ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((> 4.5 3) ()))))


(printf "\nMANIPULATION OF LISTS\n\n")


(printf "expected: (((: 3 nil) ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((: 3 nil) ()))))
(printf "expected: ((3 ())),\t\t\t\t\t\tobtained: ~a\n"					(apply-reduction-relation* expr-red (term ((head (: 3 nil)) ()))))
(printf "expected: ((nil ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((head (: nil 3)) ()))))
(printf "expected: (((head nil) ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((head nil) ()))))
(printf "expected: ((nil ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((tail (: 3 nil)) ()))))
(printf "expected: ((3 ())),\t\t\t\t\t\tobtained: ~a\n"					(apply-reduction-relation* expr-red (term ((tail (: nil 3)) ()))))
(printf "expected: (((tail nil) ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((tail nil) ()))))
(printf "expected: (((: 30 120) ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((: 30 120) ()))))
(printf "expected: ((30 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((head (: 30 120)) ()))))
(printf "expected: ((30 ((x 30)))),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((head (: x 120)) ((x 30))))))
(printf "expected: ((120 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((tail (: 30 120)) ()))))
(printf "expected: ((120 ((x 120)))),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((tail (: 30 x)) ((x 120))))))


(printf "\nMAPPING HANDLING\n\n")


(printf "expected: (((⇒ ()) ())),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((⇒ ()) ()))))
(printf "expected: (((⇒ ((k1 2))) ())),\t\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((⇒ (("k1" 1) ("k1" 2))) ()))))
(printf "expected: (((⇒ ((key 1))) ())),\t\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((⇒ (("key" 1))) ()))))
(printf "expected: (((⇒ ((key 12))) ())),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((⇒ (("key" (* 3 4)))) ()))))
(printf "expected: (((⇒ ((key 12))) ())),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((put (⇒ ()) "key" (* 3 4)) ()))))
(printf "expected: (((⇒ ((key 12))) ())),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((put (⇒ (("key" 15))) "key" (* 3 4)) ()))))
(printf "expected: (((⇒ ((k1 2) (k2 2))) ())),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((put (⇒ (("k1" 1) ("k2" 2))) "k1" 2) ()))))
(printf "expected: (((⇒ ((k1 1) (k2 1))) ())),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((put (⇒ (("k1" 1) ("k2" 2))) "k2" 1) ()))))
(printf "expected: (((⇒ ((key 12))) ((x key)))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((put (⇒ ()) x (* 3 4)) ((x "key"))))))
(printf "expected: (((⇒ ((key 12))) ((x 12)))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((put (⇒ ()) "key" x) ((x 12))))))
(printf "expected: ((12 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((get (⇒ (("key" (* 3 4)))) "key") ()))))
(printf "expected: ((12 ((x key)))),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((get (⇒ (("key" (* 3 4)))) x) ((x "key"))))))
(printf "expected: ((12 ((x key)))),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((get (⇒ ((x (* 3 4)))) "key") ((x "key"))))))
(printf "expected: ((12 ((x 12)))),\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((get (⇒ (("key" x))) "key") ((x 12))))))


(printf "\nVARIABLES LINKED TO NUMBERS\n\n")


(printf "expected: ((3 ((x0 2) (x1 1))),\t\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((+ x0 x1) ((x0 2) (x1 1))))))
(printf "expected: ((3.718281828 ((x0 2.718281828) (x1 1)))),\t\tobtained: ~a\n"	(apply-reduction-relation* expr-red (term ((+ x0 x1) ((x0 2.718281828) (x1 1))))))
(printf "expected: ((8 ((x0 15) (x1 7)))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((- x0 x1) ((x0 15) (x1 7))))))
(printf "expected: ((12.281718172 ((x0 15) (x1 2.718281828)))),\t\tobtained: ~a\n"	(apply-reduction-relation* expr-red (term ((- x0 x1) ((x0 15) (x1 2.718281828))))))
(printf "expected: ((105 ((x0 15) (x1 7)))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((* x0 x1) ((x0 15) (x1 7))))))
(printf "expected: ((40.774227419999995 ((x0 15) (x1 2.718281828)))),\tobtained: ~a\n"	(apply-reduction-relation* expr-red (term ((* x0 x1) ((x0 15) (x1 2.718281828))))))
(printf "expected: ((2 ((x0 30) (x1 14)))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((÷ x0 x1) ((x0 30) (x1 14))))))
(printf "expected: (((÷ 15 2.718281828) ((x0 15) (x1 2.718281828)))),\tobtained: ~a\n"	(apply-reduction-relation* expr-red (term ((÷ x0 x1) ((x0 15) (x1 2.718281828))))))


(printf "\nVARIABLES LINKED TO LISTS\n\n")


(printf "expected: (((: 127 128) ((y (: 127 128))))),\t\t\tobtained: ~a\n"		(apply-reduction-relation* expr-red (term (y ((y (: 127 128)))))))
(printf "expected: ((127 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((head (: 127 128)) ()))))
(printf "expected: ((127 ((y (: 127 128))))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((head y) ((y (: 127 128)))))))
(printf "expected: ((128 ())),\t\t\t\t\t\tobtained: ~a\n"				(apply-reduction-relation* expr-red (term ((tail (: 127 128)) ()))))
(printf "expected: ((128 ((y (: 127 128))))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((tail y) ((y (: 127 128)))))))


(printf "\nVARIABLES LINKED TO MAPPING\n\n")


(printf "expected: (((⇒ ((key 1))) ((x (⇒ ((key 1))))))),\t\tobtained: ~a\n"		(apply-reduction-relation* expr-red (term (x ((x (⇒ (("key" 1)))))))))
(printf "expected: (((⇒ ((key 12))) ((x (⇒ ()))))),\t\t\tobtained: ~a\n"		(apply-reduction-relation* expr-red (term ((put x "key" (* 3 4)) ((x (⇒ ())))))))
(printf "expected: ((12 ((x (⇒ ((key 12))))))),\t\t\t\tobtained: ~a\n"			(apply-reduction-relation* expr-red (term ((get x "key") ((x (⇒ (("key" 12)))))))))


(test-equal (apply-reduction-relation* expr-red (term (#t ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term (123 ())))
            '((123 ())))
(test-equal (apply-reduction-relation* expr-red (term ("string" ())))
            '(("string" ())))
(test-equal (apply-reduction-relation* expr-red (term ((⇒ (("map1" 1) ("map2" 2) ("map3" 3))) ())))
            '(((⇒ (("map1" 1) ("map2" 2) ("map3" 3))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((: 1 2) ())))
            '(((: 1 2) ())))
(test-equal (apply-reduction-relation* expr-red (term (nil ())))
            '((nil ())))


(test-equal (apply-reduction-relation* expr-red (term ((+ 3 4) ())))
            '((7 ())))
(test-equal (apply-reduction-relation* expr-red (term ((+ 3.14159 4) ())))
            '((7.14159 ())))
(test-equal (apply-reduction-relation* expr-red (term ((- 7 3) ())))
            '((4 ())))
(test-equal (apply-reduction-relation* expr-red (term ((- 7 3.14159) ())))
            '((3.85841 ())))
(test-equal (apply-reduction-relation* expr-red (term ((* 7 3) ())))
            '((21 ())))
(test-equal (apply-reduction-relation* expr-red (term ((* 7 3.14159) ())))
            '((21.99113 ())))
(test-equal (apply-reduction-relation* expr-red (term ((÷ 14 6) ())))
            '((2 ())))
(test-equal (apply-reduction-relation* expr-red (term ((÷ 7 3.14159) ())))
            '(((÷ 7 3.14159) ())))


(test-equal (apply-reduction-relation* expr-red (term ((&& #t #t) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((&& #t #f) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((&& #f #f) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((&& #f #t) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((|| #t #t) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((|| #t #f) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((|| #f #f) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((|| #f #t) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((¬ #f) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((¬ #t) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((== 0 1) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((== 32 32) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((== 64 64.0) ())))
            '((#t ())))
(test-equal (apply-reduction-relation* expr-red (term ((> 3 4.5) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((> 3 3) ())))
            '((#f ())))
(test-equal (apply-reduction-relation* expr-red (term ((> 4.5 3) ())))
            '((#t ())))


(test-equal (apply-reduction-relation* expr-red (term ((: 3 nil) ())))
            '(((: 3 nil) ())))
(test-equal (apply-reduction-relation* expr-red (term ((head (: 3 nil)) ())))
            '((3 ())))
(test-equal (apply-reduction-relation* expr-red (term ((head (: nil 3)) ())))
            '((nil ())))
(test-equal (apply-reduction-relation* expr-red (term ((head nil) ())))
            '(((head nil) ())))
(test-equal (apply-reduction-relation* expr-red (term ((tail (: 3 nil)) ())))
            '((nil ())))
(test-equal (apply-reduction-relation* expr-red (term ((tail (: nil 3)) ())))
            '((3 ())))
(test-equal (apply-reduction-relation* expr-red (term ((tail nil) ())))
            '(((tail nil) ())))
(test-equal (apply-reduction-relation* expr-red (term ((: 30 120) ())))
            '(((: 30 120) ())))
(test-equal (apply-reduction-relation* expr-red (term ((head (: 30 120)) ())))
            '((30 ())))
(test-equal (apply-reduction-relation* expr-red (term ((head (: x 120)) ((x 30)))))
            '((30 ((x 30)))))
(test-equal (apply-reduction-relation* expr-red (term ((tail (: 30 120)) ())))
            '((120 ())))
(test-equal (apply-reduction-relation* expr-red (term ((tail (: 30 x)) ((x 120)))))
            '((120 ((x 120)))))


(test-equal (apply-reduction-relation* expr-red (term ((⇒ ()) ())))
            '(((⇒ ()) ())))
(test-equal (apply-reduction-relation* expr-red (term ((⇒ (("k1" 1) ("k1" 2))) ())))
            '(((⇒ (("k1" 2))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((⇒ (("key" 1))) ())))
            '(((⇒ (("key" 1))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((⇒ (("key" (* 3 4)))) ())))
            '(((⇒ (("key" 12))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((put (⇒ ()) "key" (* 3 4)) ())))
            '(((⇒ (("key" 12))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((put (⇒ (("key" 15))) "key" (* 3 4)) ())))
            '(((⇒ (("key" 12))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((put (⇒ (("k1" 1) ("k2" 2))) "k1" 2) ())))
            '(((⇒ (("k1" 2) ("k2" 2))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((put (⇒ (("k1" 1) ("k2" 2))) "k2" 1) ())))
            '(((⇒ (("k1" 1) ("k2" 1))) ())))
(test-equal (apply-reduction-relation* expr-red (term ((put (⇒ ()) x (* 3 4)) ((x "key")))))
            '(((⇒ (("key" 12))) ((x "key")))))
(test-equal (apply-reduction-relation* expr-red (term ((put (⇒ ()) "key" x) ((x 12)))))
            '(((⇒ (("key" 12))) ((x 12)))))
(test-equal (apply-reduction-relation* expr-red (term ((get (⇒ (("key" (* 3 4)))) "key") ())))
            '((12 ())))
(test-equal (apply-reduction-relation* expr-red (term ((get (⇒ (("key" (* 3 4)))) x) ((x "key")))))
            '((12 ((x "key")))))
(test-equal (apply-reduction-relation* expr-red (term ((get (⇒ ((x (* 3 4)))) "key") ((x "key")))))
            '((12 ((x "key")))))
(test-equal (apply-reduction-relation* expr-red (term ((get (⇒ (("key" x))) "key") ((x 12)))))
            '((12 ((x 12)))))


(test-equal (apply-reduction-relation* expr-red (term ((+ x0 x1) ((x0 2) (x1 1)))))
            '((3 ((x0 2) (x1 1)))))
(test-equal (apply-reduction-relation* expr-red (term ((+ x0 x1) ((x0 2.718281828) (x1 1)))))
            '((3.718281828 ((x0 2.718281828) (x1 1)))))
(test-equal (apply-reduction-relation* expr-red (term ((- x0 x1) ((x0 15) (x1 7)))))
            '((8 ((x0 15) (x1 7)))))
(test-equal (apply-reduction-relation* expr-red (term ((- x0 x1) ((x0 15) (x1 2.718281828)))))
            '((12.281718172 ((x0 15) (x1 2.718281828)))))
(test-equal (apply-reduction-relation* expr-red (term ((* x0 x1) ((x0 15) (x1 7)))))
            '((105 ((x0 15) (x1 7)))))
(test-equal (apply-reduction-relation* expr-red (term ((* x0 x1) ((x0 15) (x1 2.718281828)))))
            '((40.774227419999995 ((x0 15) (x1 2.718281828)))))
(test-equal (apply-reduction-relation* expr-red (term ((÷ x0 x1) ((x0 30) (x1 14)))))
            '((2 ((x0 30) (x1 14)))))
(test-equal (apply-reduction-relation* expr-red (term ((÷ x0 x1) ((x0 15) (x1 2.718281828)))))
            '(((÷ 15 2.718281828) ((x0 15) (x1 2.718281828)))))


(test-equal (apply-reduction-relation* expr-red (term (y ((y (: 127 128))))))
            '(((: 127 128) ((y (: 127 128))))))
(test-equal (apply-reduction-relation* expr-red (term ((head (: 127 128)) ())))
            '((127 ())))
(test-equal (apply-reduction-relation* expr-red (term ((head y) ((y (: 127 128))))))
            '((127 ((y (: 127 128))))))
(test-equal (apply-reduction-relation* expr-red (term ((tail (: 127 128)) ())))
            '((128 ())))
(test-equal (apply-reduction-relation* expr-red (term ((tail y) ((y (: 127 128))))))
            '((128 ((y (: 127 128))))))


(test-equal (apply-reduction-relation* expr-red (term (x ((x (⇒ (("key" 1))))))))
            '(((⇒ (("key" 1))) ((x (⇒ (("key" 1))))))))
(test-equal (apply-reduction-relation* expr-red (term ((put x "key" (* 3 4)) ((x (⇒ ()))))))
            '(((⇒ (("key" 12))) ((x (⇒ ()))))))
(test-equal (apply-reduction-relation* expr-red (term ((get x "key") ((x (⇒ (("key" 12))))))))
            '((12 ((x (⇒ (("key" 12))))))))


(test-results)